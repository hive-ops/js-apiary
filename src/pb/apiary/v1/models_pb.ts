// @generated by protoc-gen-es v1.10.0 with parameter "target=ts"
// @generated from file apiary/v1/models.proto (package apiary.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type {
    BinaryReadOptions,
    FieldList,
    JsonReadOptions,
    JsonValue,
    PartialMessage,
    PlainMessage,
} from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * @generated from message apiary.v1.Entry
 */
export class Entry extends Message<Entry> {
    /**
     * @generated from field: string key = 1;
     */
    key = "";

    /**
     * @generated from field: bytes value = 2;
     */
    value = new Uint8Array(0);

    constructor(data?: PartialMessage<Entry>) {
        super();
        proto3.util.initPartial(data, this);
    }

    static readonly runtime: typeof proto3 = proto3;
    static readonly typeName = "apiary.v1.Entry";
    static readonly fields: FieldList = proto3.util.newFieldList(() => [
        { no: 1, name: "key", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 2, name: "value", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
    ]);

    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Entry {
        return new Entry().fromBinary(bytes, options);
    }

    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Entry {
        return new Entry().fromJson(jsonValue, options);
    }

    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Entry {
        return new Entry().fromJsonString(jsonString, options);
    }

    static equals(a: Entry | PlainMessage<Entry> | undefined, b: Entry | PlainMessage<Entry> | undefined): boolean {
        return proto3.util.equals(Entry, a, b);
    }
}
