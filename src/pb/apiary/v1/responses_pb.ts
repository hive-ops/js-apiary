// @generated by protoc-gen-es v1.10.0 with parameter "target=ts"
// @generated from file apiary/v1/responses.proto (package apiary.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type {
    BinaryReadOptions,
    FieldList,
    JsonReadOptions,
    JsonValue,
    PartialMessage,
    PlainMessage,
} from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import { Entry } from "./models_pb";

/**
 * @generated from message apiary.v1.GetEntriesResponse
 */
export class GetEntriesResponse extends Message<GetEntriesResponse> {
    /**
     * @generated from field: repeated apiary.v1.Entry entries = 1;
     */
    entries: Entry[] = [];

    /**
     * @generated from field: repeated string not_found = 2;
     */
    notFound: string[] = [];

    constructor(data?: PartialMessage<GetEntriesResponse>) {
        super();
        proto3.util.initPartial(data, this);
    }

    static readonly runtime: typeof proto3 = proto3;
    static readonly typeName = "apiary.v1.GetEntriesResponse";
    static readonly fields: FieldList = proto3.util.newFieldList(() => [
        { no: 1, name: "entries", kind: "message", T: Entry, repeated: true },
        {
            no: 2,
            name: "not_found",
            kind: "scalar",
            T: 9 /* ScalarType.STRING */,
            repeated: true,
        },
    ]);

    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetEntriesResponse {
        return new GetEntriesResponse().fromBinary(bytes, options);
    }

    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetEntriesResponse {
        return new GetEntriesResponse().fromJson(jsonValue, options);
    }

    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetEntriesResponse {
        return new GetEntriesResponse().fromJsonString(jsonString, options);
    }

    static equals(
        a: GetEntriesResponse | PlainMessage<GetEntriesResponse> | undefined,
        b: GetEntriesResponse | PlainMessage<GetEntriesResponse> | undefined,
    ): boolean {
        return proto3.util.equals(GetEntriesResponse, a, b);
    }
}

/**
 * @generated from message apiary.v1.SetEntriesResponse
 */
export class SetEntriesResponse extends Message<SetEntriesResponse> {
    /**
     * @generated from field: repeated string successful = 1;
     */
    successful: string[] = [];

    /**
     * @generated from field: repeated string failed = 2;
     */
    failed: string[] = [];

    constructor(data?: PartialMessage<SetEntriesResponse>) {
        super();
        proto3.util.initPartial(data, this);
    }

    static readonly runtime: typeof proto3 = proto3;
    static readonly typeName = "apiary.v1.SetEntriesResponse";
    static readonly fields: FieldList = proto3.util.newFieldList(() => [
        {
            no: 1,
            name: "successful",
            kind: "scalar",
            T: 9 /* ScalarType.STRING */,
            repeated: true,
        },
        {
            no: 2,
            name: "failed",
            kind: "scalar",
            T: 9 /* ScalarType.STRING */,
            repeated: true,
        },
    ]);

    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SetEntriesResponse {
        return new SetEntriesResponse().fromBinary(bytes, options);
    }

    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SetEntriesResponse {
        return new SetEntriesResponse().fromJson(jsonValue, options);
    }

    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SetEntriesResponse {
        return new SetEntriesResponse().fromJsonString(jsonString, options);
    }

    static equals(
        a: SetEntriesResponse | PlainMessage<SetEntriesResponse> | undefined,
        b: SetEntriesResponse | PlainMessage<SetEntriesResponse> | undefined,
    ): boolean {
        return proto3.util.equals(SetEntriesResponse, a, b);
    }
}

/**
 * @generated from message apiary.v1.DeleteEntriesResponse
 */
export class DeleteEntriesResponse extends Message<DeleteEntriesResponse> {
    /**
     * @generated from field: repeated string successful = 1;
     */
    successful: string[] = [];

    /**
     * @generated from field: repeated string not_found = 2;
     */
    notFound: string[] = [];

    /**
     * @generated from field: repeated string failed = 3;
     */
    failed: string[] = [];

    constructor(data?: PartialMessage<DeleteEntriesResponse>) {
        super();
        proto3.util.initPartial(data, this);
    }

    static readonly runtime: typeof proto3 = proto3;
    static readonly typeName = "apiary.v1.DeleteEntriesResponse";
    static readonly fields: FieldList = proto3.util.newFieldList(() => [
        {
            no: 1,
            name: "successful",
            kind: "scalar",
            T: 9 /* ScalarType.STRING */,
            repeated: true,
        },
        {
            no: 2,
            name: "not_found",
            kind: "scalar",
            T: 9 /* ScalarType.STRING */,
            repeated: true,
        },
        {
            no: 3,
            name: "failed",
            kind: "scalar",
            T: 9 /* ScalarType.STRING */,
            repeated: true,
        },
    ]);

    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteEntriesResponse {
        return new DeleteEntriesResponse().fromBinary(bytes, options);
    }

    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteEntriesResponse {
        return new DeleteEntriesResponse().fromJson(jsonValue, options);
    }

    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteEntriesResponse {
        return new DeleteEntriesResponse().fromJsonString(jsonString, options);
    }

    static equals(
        a: DeleteEntriesResponse | PlainMessage<DeleteEntriesResponse> | undefined,
        b: DeleteEntriesResponse | PlainMessage<DeleteEntriesResponse> | undefined,
    ): boolean {
        return proto3.util.equals(DeleteEntriesResponse, a, b);
    }
}

/**
 * @generated from message apiary.v1.ClearEntriesResponse
 */
export class ClearEntriesResponse extends Message<ClearEntriesResponse> {
    /**
     * @generated from field: bool successful = 1;
     */
    successful = false;

    constructor(data?: PartialMessage<ClearEntriesResponse>) {
        super();
        proto3.util.initPartial(data, this);
    }

    static readonly runtime: typeof proto3 = proto3;
    static readonly typeName = "apiary.v1.ClearEntriesResponse";
    static readonly fields: FieldList = proto3.util.newFieldList(() => [
        { no: 1, name: "successful", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    ]);

    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ClearEntriesResponse {
        return new ClearEntriesResponse().fromBinary(bytes, options);
    }

    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ClearEntriesResponse {
        return new ClearEntriesResponse().fromJson(jsonValue, options);
    }

    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ClearEntriesResponse {
        return new ClearEntriesResponse().fromJsonString(jsonString, options);
    }

    static equals(
        a: ClearEntriesResponse | PlainMessage<ClearEntriesResponse> | undefined,
        b: ClearEntriesResponse | PlainMessage<ClearEntriesResponse> | undefined,
    ): boolean {
        return proto3.util.equals(ClearEntriesResponse, a, b);
    }
}
